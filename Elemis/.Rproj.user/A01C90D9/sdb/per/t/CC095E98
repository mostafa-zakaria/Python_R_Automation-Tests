{
    "collab_server" : "",
    "contents" : "setwd(\"~/Documents/Proposals & Works/Profiler/Elemis\")\n###### Required Packages ##########\nfor (package in c('lubridate')) {\n  if (!require(package, character.only=T, quietly=T)) {\n    install.packages(package)\n    library(package, character.only=T)\n  }\n}\n\nresult <- tryCatch({\n  ########## Inputs ############\n  \n  myArgs <- commandArgs(trailingOnly = TRUE)\n   \n  #retreive order file and field mapping from commandline arguments\n  #orderFile <- \"SI_Data_No_Guest_Mod_Div.csv\"\n  #order <-  \"Order\"\n  #date <- \"Date\"\n  #customer <- \"Customer\"\n  #item <- \"Item\"\n  #amount <- \"Total_Price\"\n  #quantity <- \"Quantity\"\n  #price <- \"Unit_Price\"\n\n  orderFile <- myArgs[1]\n  order <-  myArgs[2]\n  date <- myArgs[3]\n  customer <- myArgs[4]\n  item <- myArgs[5]\n  amount <- myArgs[6]\n  quantity <- myArgs[7]\n  price <- myArgs[8]\n  \n  \n    #### Load Raw Data #####\n  \n  Orders <- read.csv(orderFile, header = TRUE, sep = \",\", stringsAsFactors = FALSE, strip.white = TRUE)\n  \n  # If there is no contact file, comment out by inserting a \"#\" before Contacts on the line below.\n  \n  #Contacts <- read.csv(contactFile, header = TRUE, sep = \",\", stringsAsFactors = FALSE, strip.white = TRUE)\n  \n  ########################\n  \n  #####################\n  #  Order File Prep  #\n  #####################\n  \n  #### Change names in order file to match profiler \n  \n  names(Orders)[names(Orders) == order] <- 'order'\n  names(Orders)[names(Orders) == date] <- 'date'\n  names(Orders)[names(Orders) == customer] <- 'customer'\n  names(Orders)[names(Orders) == item] <- 'item'\n  names(Orders)[names(Orders) == amount] <- 'amount'\n  names(Orders)[names(Orders) == quantity] <- 'quantity'\n  names(Orders)[names(Orders) == price] <- 'price'\n  \n  #### Remove columns that are not needed ####\n  \n  Orders <- Orders[c(\"order\", \"date\", \"customer\", \"item\", \"amount\", \"quantity\", \"price\")]\n  \n  #### Change field type to match profiler ####\n  \n  Orders$order <- as.character(Orders$order)\n  #Orders$date <- ymd(Orders$date) # Depending on the date format in the source file, you may need to edit this field.  \n  # R may do this on it's own. If you get an error, this is a place to check. date formate is\n  # yyyy-mm-dd - see help or google dates transformation in R\n  Orders$date <- strptime(as.character(Orders$date), \"%m/%d/%y\")\n  Orders$date <- format(Orders$date, \"%Y/%m/%d\")\n  Orders$amount <- as.numeric(Orders$amount)\n  Orders$quantity <- as.numeric(Orders$quantity)\n  Orders$price <- as.numeric(Orders$price)\n  \n  #### Remove NA's from Orders ####\n  \n  Orders <- Orders[complete.cases(Orders),]\n  \n  #### Write csv of clean order file to working directory\n  \n  write.csv(Orders, file = paste(\"Automation_Orders.csv\"), row.names = FALSE, na = \"\")\n  \n  # #######################\n  # #  Contact File Prep  #\n  # #######################\n  # \n  # #### !!!!! NOTE: If there is no contact file to , comment out the remaining code by doing the following !!!!! ####\n  # \n  # # 1. Highlight from here to the bottom of the script\n  # # 2. Select Code > Comment/Uncomment Lines  (or CMD/Shift\"C\" for Mac...)\n  # \n  # #### Change names in order file to match profiler\n  # \n  # names(Contacts)[names(Contacts) == UserId_CN] <- 'UserId_CN'\n  # names(Orders)[names(Orders) == registration_date_CN] <- 'registration_date_CN'\n  # \n  # #### Remove all fields except CustomerID and First order Date\n  # \n  # Contacts <- Contacts[c(\"UserID_CN\",\"registration_date_CN\"),]\n  # \n  # #### Convert Contact Fields to correct Type\n  # \n  # Contacts$UserID_CN <- as.character(Contacts$UserID_CN)\n  # Contacts$registration_date_CN <- as.Date(Contacts$registration_date_CN)\n  # \n  # #### Remove NA's from Contacts ####\n  # \n  # Contacts <- Contacts[complete.cases(ContactsFinal),]\n  # \n  # #### Write final formatted files back to working directory ####\n  # \n  # write.csv(ContactsFinal, file = \"Contacts.csv\", row.names = FALSE, na = \"\")\n  # \n  # \n  # \n}, error = function(err){\n  print(paste(\"MY_ERROR>  \", err))\n  return(-1)\n})\n\n",
    "created" : 1490627820701.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3179994183",
    "id" : "CC095E98",
    "lastKnownWriteTime" : 1490691956,
    "last_content_update" : 1490691956586,
    "path" : "~/Documents/Proposals & Works/Profiler/Elemis/Data_Translation.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}