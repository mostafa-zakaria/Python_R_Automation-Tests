{
    "contents" : "opt <- options(\"scipen\" = 20)\n\nif(!exists(\"load_and_install_package\", mode=\"function\")) source(paste(profilingScriptLocation,\"/utils/package_tools.R\",sep=\"\"))\n\nload_and_install_package(\"Hmisc\")\n\nworkingDirectory <- getwd()\nprint(workingDirectory)\n\nif(!exists(\"exclude_negative_values_by_column\", mode=\"function\")) source(paste(profilingScriptLocation,\"/utils/utils.R\",sep=\"\"))\nif(!exists(\"checkDate\", mode=\"function\")) source(paste(profilingScriptLocation,\"/utils/checkDate.R\",sep=\"\"))\nif(!exists(\"readFile\", mode=\"function\")) source(paste(profilingScriptLocation,\"/utils/readFile.R\",sep=\"\"), chdir=TRUE)\nif(!exists(\"summaries\", mode=\"function\")) source(paste(profilingScriptLocation,\"/utils/summaries.R\",sep=\"\"))\nif(!exists(\"write_summaries\", mode=\"function\")) source(paste(profilingScriptLocation,\"/utils/write_summaries.R\",sep=\"\"), chdir=TRUE)\n\nif(!exists(\"writeFreqs\", mode=\"function\")) source(paste(profilingScriptLocation,\"/writeFreqs.R\",sep=\"\")) \n\nif(!exists(\"checkProduct\", mode=\"function\")) source(paste(profilingScriptLocation,\"/checkProduct.R\",sep=\"\"), chdir=TRUE)\nif(!exists(\"checkSalesItem\", mode=\"function\")) source(paste(profilingScriptLocation,\"/checkSalesItem.R\",sep=\"\"))\nif(!exists(\"checkContact\", mode=\"function\")) source(paste(profilingScriptLocation,\"/checkContacts.R\",sep=\"\"))\n\nstartTime <- proc.time()\n\nprofilingOutputDir <- \"./Profiling/\"\nprofilingOutput <- \"./Profiling/profiling.txt\"\n\ndir.create(file.path(workingDirectory, profilingOutputDir), showWarnings = FALSE)\n#setwd(file.path(mainDir, subDir))\n\nif (!exists(\"writeProductFreq\", mode=\"any\")) {\n  writeProductFreq <- TRUE\n}\nif (!exists(\"writeSalesIemFreq\", mode=\"any\")) {\n  writeSalesIemFreq <- TRUE\n}\nif (!exists(\"writeContactsFreq\", mode=\"any\")) {\n  writeContactsFreq <- TRUE\n}\nif (!exists(\"show_freq_limit\", mode=\"any\")) {\n  show_freq_limit <- 10000\n}\nif (!exists(\"registration_date_CN\", mode=\"any\")) {\n  registration_date_CN <- \"\"\n}\n\n\nprint(\"Profiling Start.\")\nwrite(\"Profiling.\", file=profilingOutput)\n\n# PRODUCT\n# if (exists(\"product_file_params\", mode=\"list\") & nchar(product_file_params$name) > 0) {\nfile <- file(profilingOutput, open=\"ab\", encoding=\"UTF-8\")\n\nproduct <- NULL\nif (params_exist(\"product_file_params\")) {\n  print(\"Start Product Checking.\")\n\n  product_file_params <- build_file_params(product_file_params)\n  product_file_params <- override_item_colum_type(product_file_params, product_columns$item, 'character')\n\n  product <- checkProduct(product_file_params, file, product_columns)\n  sapply(product$data,class)\n  if (writeProductFreq == TRUE) {\n    print(\"Write Product frequencies.\")\n    product_freqs <- writeFreqs(product$data,freqFilename = paste(\"./Profiling/\",strsplit(product_file_params$name, split=\"\\\\.\")[[1]][1],\"_freq.csv\", sep=\"\"), show_freq_limit = show_freq_limit)\n  }    \n  products <- product$data\n  bad_products_guesses <- highlight_bad_row_guesses(product$result)\n  products_tail <- tail_df(product$result)\n}\n\n\n# SALES_ITEM\nif (params_exist(\"sales_items_file_params\")) {\n  print(\"Start Sales Item Checking.\")\n  sales_items_file_params <- build_file_params(sales_items_file_params)\n  sales_items_file_params <- override_item_colum_type(sales_items_file_params, sales_item_columns$item, 'character')\n  \n  sales_item <- checkSalesItem(sales_items_file_params, file, sales_item_columns, product)\n\n  sales_item_prefix <- strsplit(sales_items_file_params$name, split=\"\\\\.\")[[1]][1]\n  if (anyDuplicated(sales_item$data)) \n    write.csv(unique(sales_item$data[duplicated(sales_item$data),]), file=paste(\"./Profiling/\",sales_item_prefix,\"_unique_duplications.csv\", sep=\"\"), row.names=F)    \n  \n  if (writeSalesIemFreq == TRUE) {\n    print(\"Write sales_items frequencies.\")\n    sales_item_freqs <- writeFreqs(sales_item$data,freqFilename = paste(\"./Profiling/\",sales_item_prefix,\"_freq.csv\", sep=\"\"), show_freq_limit = show_freq_limit)\n  }    \n  sales_items <- sales_item$data\n  bad_sales_items_guesses <- highlight_bad_row_guesses(sales_item$result)\n  sales_items_tail <- tail_df(sales_item$result)  \n}\nclose(file) \n\nresults <- NULL\n#CONTACT\nif (exists(\"contact_file_params\", mode=\"list\") & nchar(contact_file_params$name) > 0) {\n  print(\"Start Contact Checking.\")\n  contact_file_params <- build_file_params(contact_file_params)\n  results <- checkContact (contact_file_params, profilingOutput, \n                           UserId_CN, registration_date_CN,\n                           order = sales_item$data, OrderUserId_CI = sales_item$columns$customer$index, OrderDate_CI = sales_item$columns$date$index, OrderOrderID_CI = sales_item$columns$order$index)\n  contact <- results$contact\n  customer <- results$customer\n  contact_dim <- results$contact_dim\n  if (writeContactsFreq == TRUE) {\n    print(\"Write Contact frequencies.\")\n    contact_freqs <- writeFreqs(contact,freqFilename = paste(\"./Profiling/\",strsplit(contact_file_params$name, split=\"\\\\.\")[[1]][1],\"_freq.csv\", sep=\"\"), show_freq_limit = show_freq_limit)\n  }    \n}\n\nif (is.null(results$contact_dim) & !is.null(sales_items))\n  contact_dim <- create_contact_dim(as.character(unique(sales_items[,sales_item$columns$customer$index])))\n\nif (!is.null(sales_items)) {\n  sales_item$data <- merge(sales_item$data, contact_dim, by.x=sales_item$columns$customer$index, by.y = 'ExternalID')[, union(names(sales_item$data), 'contact_integer_id')]\n  sales_items <- sales_item$data\n  sales_item$columns$contact_integer_id = list(\n    name = 'contact_integer_id', \n    index = getColumnIndice(sales_item$data, 'contact_integer_id'))\n  \n}\n\nfileNames <- paste(sales_items_file_params$name)\n\nwrite(\"\", file=profilingOutput, append = TRUE)\nwrite(paste(\"Profiling End. Time:\",(proc.time() - startTime)[3]), file=profilingOutput, append = TRUE)",
    "created" : 1444050038707.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2237548270",
    "id" : "3F874426",
    "lastKnownWriteTime" : 1433882980,
    "path" : "~/Works/src/si-tools/R_profiling/profiling_script/run_profiling_si.R",
    "project_path" : "profiling_script/run_profiling_si.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "type" : "r_source"
}